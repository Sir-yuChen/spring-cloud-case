#bootstrap.yml 是系统级别的，加载优先级高于 application.yml ，负责从外部加载配置并解析
spring:
  application:
    name: cloud-case-config-client
  cloud:
    #Config客户端配置
    config:
      label: main #分支名称
#      uri: http://localhost:8020/ #配置中心地址     service-id 服务发现二选一配置即可【建议使用服务名】
      profile: dev  # config-dev.yml 中的 dev 环境名
      name: cloud-case-config-client
      discovery:
        enabled: true
        service-id: CLOUD-CASE-CONFIG-CENTER # 指定配置中心的service-id， 便于扩展为高可用配置集群，不区分大小写
      server:
        git:
          search-paths: cloud-case

#注册中心，eureka
eureka:
  client:
    #表示是否将自己注册进eureka  默认为true
    register-with-eureka: true
    #是否从EurekaServer中抓取已有的注册信息，默认为true，单点无所谓，集群必须设置true才能和ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #集群配置
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  instance:
    #服务名称修改
    instance-id: ConfigClient${server.port}
    #访问路径可以显示ip地址
    prefer-ip-address: true
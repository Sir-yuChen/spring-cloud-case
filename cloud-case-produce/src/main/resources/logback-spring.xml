<?xml version="1.0" encoding="utf-8" ?>

<configuration>

    <!-- logback-spring加载早于application.yml，如果直接通过${参数key}的形式是无法获取到对应的参数值-->
    <!-- source指定的是application.yml配置文件中key，其它地方直接用${log.path}引用这个值 -->
    <!-- 解决在相对路径下生成log.path_IS_UNDEFINED的问题，增加defaultValue -->
    <springProperty scope="context" name="base.path" source="logging.file.path" defaultValue="${user.home}/logs"/>
    <!-- app.name根据你的应用名称修改 -->
    <springProperty scope="context" name="app.name" source="spring.application.name" defaultValue="applog"/>
    <property name="log.path" value="${base.path}/${app.name}/${app.name}"/>
    <!--配置规则类的位置-->
    <conversionRule conversionWord="ip" converterClass="com.zy.cloud.common.utils.IPLogConfig"/>
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%tid] [%thread] %-5level  %logger{36}  -%msg%n"/>
    <property name="log.file.pattern"
              value='{"appName": "${app.name}","time": "%date{yyyy-MM-dd HH:mm:ss.SSS}","level": "%level","traceId":"%tid","ip": "%ip","pid": "${PID:-}","thread": "%thread","class": "%logger","method": "%method","line": "%line","message": "%message","statck_trace":"%xEx"}'/>


    <!-- 控制台日志输出配置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <pattern>${log.pattern}</pattern>
            </layout>
        </encoder>
    </appender>
    <!-- 配置异步记录 AsyncAppender 上报日志 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>1024</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="STDOUT"/>
    </appender>
    <!-- skywalking grpc 日志收集 8.4.0版本开始支持 -->
    <appender name="grpc-log" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout">
                <pattern>${log.pattern}</pattern>
            </layout>
        </encoder>
    </appender>
    <!-- 文件输出日志配置，按照每天生成日志文件 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名称 -->
            <FileNamePattern>${log.path}-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!-- 日志保留天数 -->
            <MaxHistory>30</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>

        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder"
                 layout="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout"
        >
            <providers>
                <pattern>
                    <pattern>${log.file.pattern}</pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- mybatis日志配置 -->
    <!--    <logger name="java.sql.Connection" level="DEBUG"/>-->
    <!--    <logger name="java.sql.Statement" level="DEBUG"/>-->
    <!--    <logger name="java.sql.PreparedStatement" level="DEBUG"/>-->

    <!-- 配置开发环境，多个使用逗号隔开(例如：dev,sit) -->
    <springProfile name="dev">
        <!--定义日志输出级别-->
        <root level="INFO">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="file"/>
        </root>
    </springProfile>

    <!-- 配置测试环境，多个使用逗号隔开 -->
    <springProfile name="sit">
        <!--定义日志输出级别-->
        <root level="INFO">
            <appender-ref ref="ASYNC"/>　
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="grpc-log"/>
            <appender-ref ref="file"/>
        </root>
    </springProfile>

    <!-- 配置生产环境，多个使用逗号隔开 -->
    <springProfile name="prod">
        <!--定义日志输出级别-->
        <root level="INFO">
            <appender-ref ref="ASYNC"/>　
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="grpc-log"/>
            <appender-ref ref="file"/>
        </root>
    </springProfile>

</configuration>